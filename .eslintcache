[{"/Users/trondmakonese/PortFolio-Site/my-portfolio/src/App.js":"1","/Users/trondmakonese/PortFolio-Site/my-portfolio/src/about/about.js":"2","/Users/trondmakonese/PortFolio-Site/my-portfolio/src/contact/contact.js":"3","/Users/trondmakonese/PortFolio-Site/my-portfolio/src/navBar/navBar.js":"4","/Users/trondmakonese/PortFolio-Site/my-portfolio/src/projects/projects.js":"5","/Users/trondmakonese/PortFolio-Site/my-portfolio/src/reportWebVitals.js":"6","/Users/trondmakonese/PortFolio-Site/my-portfolio/src/cardGame/cardGame.js":"7"},{"size":1447,"mtime":1611687439193,"results":"8","hashOfConfig":"9"},{"size":996,"mtime":1611170083245,"results":"10","hashOfConfig":"9"},{"size":1174,"mtime":1611167515005,"results":"11","hashOfConfig":"9"},{"size":843,"mtime":1611598998652,"results":"12","hashOfConfig":"9"},{"size":4307,"mtime":1611338518780,"results":"13","hashOfConfig":"9"},{"size":362,"mtime":1610483218628,"results":"14","hashOfConfig":"9"},{"size":4018,"mtime":1611704924781,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"91fzf2",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"/Users/trondmakonese/PortFolio-Site/my-portfolio/src/App.js",["33","34","35","36","37","38","39"],"/Users/trondmakonese/PortFolio-Site/my-portfolio/src/about/about.js",["40"],"import React from 'react'\nimport './about.css'\nimport trondImage from '../image-of-trond.jpeg'\n\n\nexport const About = () => {\n    return (\n        <section className='about_section' id='About-section'>\n            <div className='image_div'>\n                <img src={trondImage} alt=\"Photo of Trond\" className=\"headshot_image\"></img>\n            </div>\n            <div className='about_text_container'>\n                <h2 className='about_text'>Greetings!</h2>\n                <p className='about_text'>\n                    My name is Trond Makonese, I am a hip hop dancer turned javaScript developer. Dancing and coding a more alike then we know. In dance we take a bunch of moving peices to make one master peice as I do when I am creating a new project. I am passionate about creating projects with a solid foundation in test driven developmentand object oriented programming while using the agile work metholodgy.\n\n                </p>\n            </div>        \n        </section>\n    )\n}",["41","42"],"/Users/trondmakonese/PortFolio-Site/my-portfolio/src/contact/contact.js",["43"],"/Users/trondmakonese/PortFolio-Site/my-portfolio/src/navBar/navBar.js",["44","45","46"],"/Users/trondmakonese/PortFolio-Site/my-portfolio/src/projects/projects.js",[],"/Users/trondmakonese/PortFolio-Site/my-portfolio/src/reportWebVitals.js",[],"/Users/trondmakonese/PortFolio-Site/my-portfolio/src/cardGame/cardGame.js",["47","48","49","50","51"],"import React, { Component, useState, useEffect, useRef  } from 'react'\nimport './cardGame.css'\n\nexport const CardGame = () => {\n    const [cardData, setCardData] = useState([])\n    const [flipCard, setFlipCard] = useState(false)\n    const [selectedCards, setSelectedCards] = useState([])\n\n    const cards = [\n                        {\n                            id: 1,\n                            img: 'blank',\n                            flipped: false\n                        },\n                        {\n                            id: 2,\n                            img: 'blank',\n                            flipped: false\n                        },\n                        {\n                            id: 3,\n                            img: 'blank',\n                            flipped: false\n                        },\n                        {\n                            id: 4,\n                            img: 'blank',\n                            flipped: false\n                        },\n                        {\n                            id: 5,\n                            img: 'blank',\n                            flipped: false\n                        },\n                        {\n                            id: 6,\n                            img: 'blank',\n                            flipped: false\n                        },\n                        {\n                            id: 7,\n                            img: 'blank',\n                            flipped: false\n                        },\n                        {\n                            id: 8,\n                            img: 'blank',\n                            flipped: false\n                        },\n                        {\n                            id: 9,\n                            img: 'blank',\n                            flipped: false\n                        },\n                        {\n                            id: 10,\n                            img: 'blank',\n                            flipped: false\n                        }\n                    ]\n\n    useEffect(() => {\n        if(!cardData.length) {\n            let shuffled = cards.sort(() => .5 - Math.random())\n            return setCardData(shuffled)\n        }\n    }, [])\n\n    const handleFlip = (e, id) => {\n        if(!selectedCards.length) {\n            e.target.classList.remove('cards')\n            selectedCards.push(id)\n            console.log(selectedCards)\n        } else if(selectedCards.length === 1){\n            e.target.classList.remove('cards')\n            selectedCards.push(id)\n            console.log(selectedCards)\n            setTimeout(() => {\n                handleReset()\n            }, 1000)\n        }     \n    }\n\n    const handleReset = () => {\n            document.querySelector(`#card-${selectedCards[0]}`).classList.add('cards')\n            document.querySelector(`#card-${selectedCards[1]}`).classList.add('cards')\n            setSelectedCards([])       \n    }\n\n    console.log(selectedCards)\n\n    return (\n        <section className='game-section' id='Game-section'>\n                <h2>Guessing Game</h2>\n                <br></br>\n                <h2>Score: 0</h2>\n                <div className='game_board'>\n                        {\n                            cardData.map(card => {\n                            return (\n                                <div key={card.id} id={`card-${card.id}`} className={'cards'} onClick={(e) => handleFlip(e, card.id)}>\n                                    <h3 className='front' alt='image-of-trond'>front</h3>\n                                    <h3 className='back' alt='back-card-image'>back</h3>\n                                </div>\n                            )\n                            })\n                        }\n                </div>\n                <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\"></link>\n                <link href=\"https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap\" rel=\"stylesheet\"></link>\n        </section>\n    )\n}\n\n",{"ruleId":"52","severity":1,"message":"53","line":1,"column":8,"nodeType":"54","messageId":"55","endLine":1,"endColumn":12},{"ruleId":"52","severity":1,"message":"56","line":3,"column":8,"nodeType":"54","messageId":"55","endLine":3,"endColumn":20},{"ruleId":"52","severity":1,"message":"57","line":4,"column":8,"nodeType":"54","messageId":"55","endLine":4,"endColumn":18},{"ruleId":"52","severity":1,"message":"58","line":5,"column":8,"nodeType":"54","messageId":"55","endLine":5,"endColumn":16},{"ruleId":"52","severity":1,"message":"59","line":6,"column":8,"nodeType":"54","messageId":"55","endLine":6,"endColumn":18},{"ruleId":"52","severity":1,"message":"60","line":7,"column":8,"nodeType":"54","messageId":"55","endLine":7,"endColumn":15},{"ruleId":"52","severity":1,"message":"61","line":8,"column":8,"nodeType":"54","messageId":"55","endLine":8,"endColumn":17},{"ruleId":"62","severity":1,"message":"63","line":10,"column":17,"nodeType":"64","endLine":10,"endColumn":87},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"52","severity":1,"message":"59","line":4,"column":8,"nodeType":"54","messageId":"55","endLine":4,"endColumn":18},{"ruleId":"52","severity":1,"message":"69","line":1,"column":17,"nodeType":"54","messageId":"55","endLine":1,"endColumn":25},{"ruleId":"52","severity":1,"message":"70","line":1,"column":27,"nodeType":"54","messageId":"55","endLine":1,"endColumn":36},{"ruleId":"52","severity":1,"message":"71","line":1,"column":38,"nodeType":"54","messageId":"55","endLine":1,"endColumn":44},{"ruleId":"52","severity":1,"message":"72","line":1,"column":17,"nodeType":"54","messageId":"55","endLine":1,"endColumn":26},{"ruleId":"52","severity":1,"message":"71","line":1,"column":49,"nodeType":"54","messageId":"55","endLine":1,"endColumn":55},{"ruleId":"52","severity":1,"message":"73","line":6,"column":12,"nodeType":"54","messageId":"55","endLine":6,"endColumn":20},{"ruleId":"52","severity":1,"message":"74","line":6,"column":22,"nodeType":"54","messageId":"55","endLine":6,"endColumn":33},{"ruleId":"75","severity":1,"message":"76","line":67,"column":8,"nodeType":"77","endLine":67,"endColumn":10,"suggestions":"78"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'smoothscroll' is defined but never used.","'trondImage' is defined but never used.","'linkIcon' is defined but never used.","'resumeIcon' is defined but never used.","'gitIcon' is defined but never used.","'emailIcon' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-native-reassign",["79"],"no-negated-in-lhs",["80"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'Component' is defined but never used.","'flipCard' is assigned a value but never used.","'setFlipCard' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cardData.length' and 'cards'. Either include them or remove the dependency array.","ArrayExpression",["81"],"no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},"Update the dependencies array to be: [cardData.length, cards]",{"range":"84","text":"85"},[2237,2239],"[cardData.length, cards]"]